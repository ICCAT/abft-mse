exportMethods(
    "initialize",
    "plot"
)
export(
    "avail",
    "loadABT",
    "make_fit_reports",
    "make_summary_report",
    "make_comp_report",
    "MSE_report",
    "readme",

    "DD_i4",
    "DD_i4_4010",
    "CDD_i4",
    "Islope1_i4",
    "Islope1_i7",
    "LstepCC4",
    "ZeroC",
    "CurC100",
    "CurC50",
    "CurC150",
    "CurC25",
    "CurC75",
    "CurC125",
    "EMP1w",
    "EMP1e",
    "EMP2w",
    "EMP2e",
    "U3",
    "U5",
    "U10",
    "U15",
    "U20",
    "SPslope_i4",
    "SPslope_i4",
    "Fadapt_i4",
    "Fadapt_i7",
    "SBT2",
    "SP_i4",
    "MCD_i4",
    "DD_R",
    "DD",
    "CDD",
    "Islope1",
    "SPslope",
    "Fadapt",
    "SP",
    "SP_R",
    "MCD",
    "MeanC",

    "CSMP",
    "xMPi",

    "runMulti",
    "multiMSE",

    "Deterministic",

    "getperf",
    "PPlot",
    "custombar",
    "Tplot",
    "Tplot2",
    "TplotS",
    "TplotS2",
    "TOplt",
    "TOPNTplt",
    "tradeoff",
    "areaplot",
    "plot_Indices",
    "plot_Recruitment",
    "plot_CatchComp",
    "Umax_30",
    "Umax_50",
    "Umax_90",
    "Overage_10",
    "Overage_20",
    "Overage_30",


    "AvC30",
    "C10",
    "C20",
    "C30",

    "D10",
    "D20",
    "D30",
    "LD",
    "DNC",
    "LDNC",
    "PGK",
    "POF",
    "POS",
    "AAVC",
    "Br30",

    "RD30",

    "AvgBr",
    "AvC10",
    "OFT",

    "tomt",
    "TEG",
    "domov",
    "domov2",
    "domov3",
    "M3read",
    "ADMBrep",
    "SRopt",
    "SRopt2",
    "SRplot",
    "SRplotYR",
    "getBH",
    "getBHYR",
    "getHS",
    "calcVBpars",
    "getVBpars",
    "calcABpars",
    "getABpars",
    "read.fit",
    "indfit",
    "trlnorm",
    "sampCatch",
    "makeCAL",
    "makeCAL2",
    "makeCAL3",
    "makeCAL4",
    "SampCatch2",
    "makeTrans",
    "makeTransparent",
    "musmooth",
    "MSY_FAST",
    "MSYMLE_parallel",
    "optMSY_eq",
    "MSYCalcs",
    "getMSYfast",
    "get_dynB0",
    "doMSY",
    "sdensplot",
    "meanFs",
    "meanFslen",
    "Fageprof",
    "timeFs",
    "sigR_AC_conv",

    "AssignAge",
    "tbin",
    "AssignFleet",
    "ICCATtoGEO",
    "ICCATtoGEO2",
    "assign_area",
    "assign_quarter",
    "assign_fleet",
    "assign_year",
    "exp_agg_CAS",
    "calcarea",

    "plotindex2",
    "plot_mov_dist",
    "plot_mov",
    "plotcomp",
    "vmovplot",

    "Explot_SS_multi",
    "Explot_SS_multi_bio",
    "Explot_SS",
    "Explot",

    "sourceall",

    "Rec_Ref",
    "MatM_Ref",
    "Bmu_Ref",
    "Lcomp_Ref",

    "MSYMLE",
    "optMSY_eq",
    "MSYCalcs",

    "read.hessian",
    "pin_from_par",
    "pin_from_cor",
    "read.fit",
    "M3write",
    "runM3",
    "runM3p",
    "M3read",
    "CalcCVs",
    "IRW_bd",
    "LHtabs",

    "retseq",
    "lcs",
    "resplot",
    "resplot2",

    "DesignEffect",

    "tiny",
    "MPlag",

    "solveforR1",
    "rnorm_T95",
    "lnormdev",
    "lndev",
    "apply_AC1_vec",
    "apply_AC1",

    "Sub_Results",
    "Join_Results",
    "Results_compiler",
    "Shiny",
    "Br30_Wt"
)
exportClasses(
    "OMI",
    "OM",
    "MSE",
    "Obs",
    "TEST"
)
import(
    "MASS",
    "snowfall",
    "maps",
    "mapdata",
    "wordcloud",
    "abind",
    "PBSmapping",
    "shiny",
    "parallel",
    "lubridate",
    "rmarkdown",
    "knitr",
    "mvtnorm",
    "ggplot2"
)
importFrom("grDevices", "col2rgb", "rainbow", "rgb", "xy.coords", "colorRampPalette")
importFrom("graphics", "abline", "hist", "layout", "legend", "lines",
          "matplot", "mtext", "par", "points", "text","axis","identify",
			    "polygon", "title", "plot.new", "barplot", "boxplot", "segments")
importFrom("stats", "coef", "density", "dlnorm", "dnorm", "lm",
           "loess", "optim", "optimise", "optimize", "predict",
           "qlnorm", "quantile", "rbeta", "rlnorm", "rmultinom",
           "rnorm", "runif", "sd", "uniroot", "approx", "dbeta", "nlm",
			     "pnorm", "loess.smooth", "plogis", "median")
importFrom("utils", "flush.console", "read.csv", "lsf.str", "packageVersion")
importFrom("abind", "abind")
importFrom("Rcpp", "evalCpp")
#importFrom("readxl", "read_excel", "excel_sheets")
#useDynLib(DLMtool)



